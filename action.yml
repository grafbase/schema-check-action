name: Grafbase Schema Check Action
author: Grafbase
description: Run the Grafbase Schema Checks
branding:
  icon: activity
  color: green
inputs:
  grafbase-access-token:
    description: A Grafbase API access token. It can be created from the Grafbase dashboard.
    required: true
  project-ref:
    description: "The account, project and (optional) branch of the schema to check against, in the format expected by the grafbase CLI. Example: tomhoule/test-project@main."
    required: true
  schema-path:
    description: The file path of the schema to check, as GraphQL SDL.
    required: true
  subgraph-name:
    description: The name of the subgraph to check. Only required in federated projects.
  slack-incoming-webhook-url:
    description: An optional Slack webhook url to post errors to


runs:
  using: composite
  steps:
    - id: validate-args
      shell: bash
      env:
        SCHEMA_PATH: "${{ inputs.schema-path }}"
      run: |
        : Handle the inputs.

        if [ -z "$SCHEMA_PATH" ]; then
          echo "The schema-path input is missing."
          exit 1
        fi

        if [ ! -s "$SCHEMA_PATH" ]; then
          echo "The schema path at $SCHEMA_PATH is empty or missing."
          exit 1
        fi

        if [ -z "${{ inputs.grafbase-access-token }}" ]; then
          echo "The grafbase-access-token input is missing."
          exit 1
        fi

        if [ -z "${{ inputs.project-ref }}" ]; then
          echo "The project-ref input is missing."
          exit 1
        fi

    - id: download-cli
      shell: bash
      run: |
        : Install the Grafbase CLI
        npm i --no-audit --no-fund grafbase

        : Test that the CLI binary works
        npx grafbase --help > /dev/null 2>&1

    - id: check
      shell: bash
      env:
        SCHEMA_PATH: ${{ inputs.schema-path }}
        GRAFBASE_ACCESS_TOKEN: ${{ inputs.grafbase-access-token }}
      run: |
        : Perform the check

        if [ -n "${{ inputs.subgraph-name }}" ]; then
          SUBGRAPH="--subgraph ${{ inputs.subgraph-name }}"
        else
          SUBGRAPH=""
        fi

        set +e
        echo 'check_errors<<STOPHERE' > "$GITHUB_OUTPUT"
        npx grafbase check "${{ inputs.project-ref }}" --schema "$SCHEMA_PATH" $SUBGRAPH |& tee >(cat >&2) | jq --slurp --raw-input >> "$GITHUB_OUTPUT"
        exit_code=${PIPESTATUS[0]}
        echo 'STOPHERE' >> "$GITHUB_OUTPUT"

        echo "Exiting with status $exit_code"
        exit $exit_code

    - name: Post check errors to slack
      if: inputs.slack-incoming-webhook-url && failure()
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "text": "Schema checks failed for ${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Schema checks failed at ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ${{ steps.check.outputs.check_errors }}
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack-incoming-webhook-url }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
